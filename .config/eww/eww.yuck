;; VARIABLES

;; hour
(defpoll current_time :interval "1s" "date +%H:%M")
(defpoll current_time_seconds :interval "1s" "date +%H:%M:%S")
(defpoll day :interval "1h" "date +%d")
(defpoll month :interval "24h" "date +%m")
(defpoll year :interval "24h" "date +%Y")
(defvar seconds false)

;; Calendar
(defpoll date :interval '120s' "LC_TIME=en_US.UTF-8 date '+%d %b %Y'")
(defvar cal_days '["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]')
(defpoll cal_day :interval '120s' "date +%d")
(deflisten cal_month "LC_TIME=en_US.UTF-8 date +%B")
(deflisten cal_year "date +%Y")
(defpoll month_days :interval "10s" "sh ./scripts/calendar.sh --month")

;; volume
(defpoll volume :interval "0.1s" "bash ./scripts/volume.sh --volume")
(defpoll muted :interval "0.1s" "bash ./scripts/volume.sh --muted")
(defpoll micvolume :interval "0.1s" "bash ./scripts/volume.sh --micvolume")
(defpoll micmuted :interval "0.1s" "bash ./scripts/volume.sh --micmuted")

;; battery
(defpoll battery :interval "2h" "bash ./scripts/battery.sh --bat")
(defpoll battery_status :interval "10s" "bash ./scripts/battery.sh --status")

;; revealers
(defvar rev_sound false)
(defvar rev_mic false)
(defvar show_power_menu false)


;; WINDOWS

(defwindow bar
    :monitor 0
    :geometry (geometry :y "5px" :width "100%" :height "30px" 
                        :anchor "top center")
    :stacking "fg"
    :exclusive true
    :focusable false
    :namespace "overlay"

    (centerbox :orientation "h"
        (box :halign "start" :space-evenly false
            (workspaces)
        )
        (box :halign "center" :space-evenly false
            (datetime)
        )
        (box :halign "end" :space-evenly false
            (sound)
            (_battery)
            (power)
        )
    )
)

(defwindow power_window
    :monitor 0
    :exclusive false
    :stacking "fg"
    :namespace "overlay"
    :geometry (geometry :anchor "center" :x "6px" :y "6px" :height "10%")
    (power_menu)
)


;; WIDGETS

(defwidget workspaces []
    (box :class "box" :halign "start"
         :orientation "h" :spacing 10 :space-evenly true 
        (button :onclick "hyprctl dispatch workspace 1" "⬤")
        (button :onclick "hyprctl dispatch workspace 2" "⬤")
        (button :onclick "hyprctl dispatch workspace 3" "⬤")
        (button :onclick "hyprctl dispatch workspace 4" "⬤")
        (button :onclick "hyprctl dispatch workspace 5" "⬤")
    )
)

(defwidget datetime []
    (box :class "box" :space-evenly false :spacing 15
        (label :text current_time)
        (label :text date)
    )
)

(defwidget sound []
    (eventbox :onhover "eww update rev_sound=true" 
              :onhoverlost "eww update rev_sound=false"
        (box :space-evenly false :class "box"
            (button :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
                (label :class "icon volume-icon" 
                       :text {muted == true
                                    ? " "
                                    : volume == 0
                                        ? " "
                                        : volume <= 0.5
                                            ? " " 
                                            : " "}
                )
            )
            (revealer :reveal {rev_sound} :transition "slideright"
                (box :space-evenly false
                    (label :text " ")
                    (scale :active true :min 0 :max 101 :orientation "h"
                           :halign "fill" :hexpand true :width 100 
                           :value "${muted ? 0 : volume}"
                           :onchange "wpctl set-volume @DEFAULT_AUDIO_SINK@ {}%"
                    )
                )
            )
            (label :class "number" :text "${volume}")
        )
    )
)

(defwidget _battery []
    (box :class "box" :space-evenly false
        (label :class "icon battery-icon"
               :text {battery > 90 ? " " : " "}
        )
        (label :class "number"
               :text "${battery}%"
        )
    )
)

(defwidget power []
    (box :class "box" :halign "center"
        (button :class "shutdown power" :style "color: #ed8796"
            :onclick ""
            (label :class "icon power-icon" :text "")
        )
    )
)

(defwidget power_menu []
    (box :orientation "v" :class "box" :space-evenly false :vexpand false
         :halign "center" :visible false
        (label :text "TESTE")
    )
)
